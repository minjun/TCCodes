import org.junit.Test;
import java.util.*;
import javax.xml.ws.Response;
import javax.xml.ws.AsyncHandler;
import client.ws.*;
import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

/*
* This Java source file was auto generated by running 'gradle init --type java-library'
* by 'mwang27581' at '4/8/14 4:03 PM' with Gradle 1.11
*
* @author mwang27581, @date 4/8/14 4:03 PM
*/
public class LibraryTest {
	@Test 
	public void testSomeLibraryMethod() {
		Library classUnderTest = new Library();
		assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
	}
	@Test 
	public void testWs() throws Exception {
		HelloWsService service = new HelloWsService();
		HelloWs port = service.getHelloWsPort();
		Response<SayHelloResponse> sayAsync = port.sayHelloAsync("Mk");
		while (!sayAsync.isDone()) {
			System.out.println("is not down");
			Thread.sleep(1000);
		}
		try {
			SayHelloResponse callNameResponse = sayAsync.get();
			String message = callNameResponse.getReturn();
			System.out.println(message);
		} catch (Exception ex) {
		}
	}
	@Test 
	public void testWsCallback() throws Exception {
		HelloWsService service = new HelloWsService();
		HelloWs port = service.getHelloWsPort();
		port.sayHelloAsync("Mk", new AsyncHandler<SayHelloResponse>() {
			public void handleResponse(Response<SayHelloResponse> res) {
				try {
					SayHelloResponse response = res.get();
					String message = response.getReturn();
					System.out.println(message);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		Thread.sleep(1000);
	}
	
	@Test 
	public void testRtnMethodCallback() throws Exception {
		HelloWsService service = new HelloWsService();
		HelloWs port = service.getHelloWsPort();
		port.rtnMethodAsync(new AsyncHandler<RtnMethodResponse>() {
			public void handleResponse(Response<RtnMethodResponse> res) {
				try {
					RtnMethodResponse response = res.get();
					List<String> list = response.getReturn();
					for (String str:list)
						System.out.println(str);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
		Thread.sleep(1000);
	}
}
